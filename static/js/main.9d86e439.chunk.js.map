{"version":3,"sources":["UserForm.js","UrlList.js","App.js","reportWebVitals.js","index.js"],"names":["UserForm","props","state","url","title","tag","handleChange","bind","handleSubmit","event","type","this","setState","target","value","preventDefault","receiveData","style","display","flexDirection","width","action","htmlFor","id","onChange","onClick","React","Component","UrlList","bookmarkItem","bookmarks","map","bookmark","index","App","handleReceiveData","formData","console","log","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RA2CeA,E,kDAxCb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,IAAM,GACNC,MAAQ,GACRC,IAAM,IAER,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBARJ,E,gDAUlB,SAAaE,EAAOC,GAClBC,KAAKC,SAAL,eAAgBF,EAAOD,EAAMI,OAAOC,U,0BAEtC,SAAaL,GACXA,EAAMM,iBACNJ,KAAKV,MAAMe,YAAY,CAACb,IAAKQ,KAAKT,MAAMC,IAAKC,MAAOO,KAAKT,MAAME,MAAOC,IAAKM,KAAKT,MAAMG,MACtFM,KAAKC,SAAS,CAACT,IAAK,GAAIC,MAAO,GAAIC,IAAK,O,oBAE1C,WAAS,IAAD,OAQN,OACE,uBAAMY,MAPQ,CAChBC,QAAS,OACTC,cAAe,SACfC,MAAO,SAImBC,OAAO,GAA/B,UACA,uBAAOC,QAAQ,MAAf,iBACA,uBAAOC,GAAG,MAAMb,KAAK,OAAOI,MAAOH,KAAKT,MAAMC,IAAKqB,SAAU,SAACf,GAAD,OAAW,EAAKH,aAAaG,EAAO,UACjG,uBAAOa,QAAQ,QAAf,mBACA,uBAAOC,GAAG,QAAQb,KAAK,OAAOI,MAAOH,KAAKT,MAAME,MAAOoB,SAAU,SAACf,GAAD,OAAW,EAAKH,aAAaG,EAAO,YACrG,uBAAOa,QAAQ,MAAf,iBACA,uBAAOC,GAAG,MAAMb,KAAK,OAAOI,MAAOH,KAAKT,MAAMG,IAAKmB,SAAU,SAACf,GAAD,OAAW,EAAKH,aAAaG,EAAO,UACjG,wBAAQgB,QAASd,KAAKH,aAAtB,2B,GAnCiBkB,IAAMC,WCcdC,E,4JAVb,WACE,IAAMC,EAAelB,KAAKV,MAAM6B,UAAUC,KAAI,SAACC,EAAUC,GAAX,OAAqB,+BAAgB,6BAAKD,EAAS7B,MAAS,6BAAK6B,EAAS5B,QAAW,6BAAK4B,EAAS3B,QAArE4B,MAG5E,OACE,6BAAKJ,Q,GATWH,IAAMC,WC4BbO,E,kDAxBb,WAAYjC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACX4B,UAAY,IAEZ,EAAKK,kBAAoB,EAAKA,kBAAkB5B,KAAvB,gBALX,E,qDAOhB,SAAkB6B,GAChBC,QAAQC,IAAIF,GACZ,IAAIN,EAAYnB,KAAKT,MAAM4B,UAC3BA,EAAUS,KAAKH,GACfzB,KAAKC,SAAS,CAACkB,UAAWA,M,oBAE9B,WACE,OACE,gCACA,cAAC,EAAD,CAAUd,YAAaL,KAAKwB,oBAC5B,cAAC,EAAD,CAASL,UAAWnB,KAAKT,MAAM4B,mB,GAlBnBJ,IAAMC,WCOTa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9d86e439.chunk.js","sourcesContent":["import React from 'react';\n\nclass UserForm extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      url : \"\",\n      title : \"\",\n      tag : \"\"\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(event, type){\n    this.setState({[type]: event.target.value})\n  }\n  handleSubmit(event){\n    event.preventDefault()\n    this.props.receiveData({url: this.state.url, title: this.state.title, tag: this.state.tag})\n    this.setState({url: \"\", title: \"\", tag: \"\"})\n  }\n  render(){\n\n  const formStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '200px'\n  };\n\n    return(\n      <form style={formStyle} action=\"\">\n      <label htmlFor=\"URL\">URL</label>\n      <input id=\"URL\" type=\"text\" value={this.state.url} onChange={(event) => this.handleChange(event, 'url')}/>\n      <label htmlFor=\"title\">Title</label>\n      <input id=\"title\" type=\"text\" value={this.state.title} onChange={(event) => this.handleChange(event, 'title')} />\n      <label htmlFor=\"tag\">Tag</label>\n      <input id=\"tag\" type=\"text\" value={this.state.tag} onChange={(event) => this.handleChange(event, 'tag')}/>\n      <button onClick={this.handleSubmit}>Submit</button>\n      </form>\n    )\n  }\n}\n\nexport default UserForm;\n\n\n// render(){\n//  This or inline (below)\n// const formStyle = {\n//   display: 'flex',\n//   flexDirection: 'column'\n// };\n//\n//   return(\n//     <form style={{display: 'flex', flexDirection: 'column'}} action=\"\">\n//     <label htmlFor=\"URL\">URL</label>\n//     <input id=\"URL\" type=\"text\"/>\n//     <label htmlFor=\"title\">Title</label>\n//     <input id=\"title\" type=\"text\"/>\n//     <label htmlFor=\"tag\">Tag</label>\n//     <input id=\"tag\" type=\"text\"/>\n//     <button>Submit</button>\n//     </form>\n//   )\n// }\n// }\n//\n// export default UserForm;\n\n\n//style={{display: 'flex', flexDirection: 'column'}}\n\n//onChange={(e) => this.handleChange(e, 'tag')}/>\n","import React from 'react';\n\nclass UrlList extends React.Component {\n  // constructor(props){\n  //   super(props);}\n\n  render(){\n    const bookmarkItem = this.props.bookmarks.map((bookmark, index) => <li key={index}><li>{bookmark.url}</li><li>{bookmark.title}</li><li>{bookmark.tag}</li></li>)\n    // const title = this.props.bookmarks.map((bookmark, index) => <p key={index}>{bookmark.title}</p>)\n    // const tag = this.props.bookmarks.map((bookmark, index) => <p key={index}>{bookmark.tag}</p>)\n    return(\n      <ul>{bookmarkItem}</ul>\n    )\n  }\n}\n\nexport default UrlList;\n\n// render(){\n//   const url = this.props.bookmarks.map((bookmark, index) => <p key={index}>{bookmark.url}</p>)\n//   const title = this.props.bookmarks.map((bookmark, index) => <p key={index}>{bookmark.title}</p>)\n//   const tag = this.props.bookmarks.map((bookmark, index) => <p key={index}>{bookmark.tag}</p>)\n//   return(\n//     <ul><li>{url}{title}{tag}</li></ul>\n//   )\n// }\n// }\n//\n// export default UrlList;\n","import React from 'react';\nimport './App.css';\nimport UserForm from './UserForm';\nimport UrlList from './UrlList';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      bookmarks : []\n      }\n      this.handleReceiveData = this.handleReceiveData.bind(this);\n    }\n    handleReceiveData(formData){\n      console.log(formData);\n      let bookmarks = this.state.bookmarks;\n      bookmarks.push(formData);\n      this.setState({bookmarks: bookmarks})\n  }\n  render(){\n    return(\n      <div>\n      <UserForm receiveData={this.handleReceiveData}/>\n      <UrlList bookmarks={this.state.bookmarks}/>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n\n\n\n// value value.title value.url\n\n//Create a bookmarking app where you can save URLs. It should have a form\n  // where you enter the URL, a title, and a \"tag\". There should be a list of all\n  // the URLs, as well as a list of all the tags. When you click on a tag, the link list\n  // should show only those tags. Hint: which tag is selected is \"application\n  // state\". When you filter the data, be careful that you do not loose the other\n  // bookmarks.\n\n//Components:\n// -Main component (App)\n//   -3 components off of that:\n//     -form\n//     -URL\n//     -tags list\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}